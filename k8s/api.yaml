apiVersion: apps/v1
kind: Deployment
metadata:
  name: poi-deployment
  namespace: api
  labels:
    deploy: poi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: poi
  template:
    metadata:
      labels:
        app: poi
    spec:
      containers:
      - image: ozgursunexpress.azurecr.io/tripinsights/poi:1.0
        imagePullPolicy: Always
        name: poi
        livenessProbe:
          httpGet:
            path: /api/poi/healthcheck
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /api/poi/healthcheck
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
        ports:
          - containerPort: 80
            name: http
            protocol: TCP
        resources:
          limits:
            cpu: "1"
            memory: "512Mi"
          requests:
            cpu: "0.2"
            memory: "128Mi"
        env:
          - name: WEB_SERVER_BASE_URI
            value: 'http://0.0.0.0'
          - name: WEB_PORT
            value: '80'
          - name: ASPNETCORE_ENVIRONMENT
            value: 'local'
        volumeMounts:
        - name: secrets-store01-inline
          mountPath: "/secrets"
          readOnly: true
      volumes:
        - name: secrets-store01-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "azure-kvname-user-msi"
---
apiVersion: v1
kind: Service
metadata:
  name: poi
  namespace: api
spec:
  type: ClusterIP
  selector:
    app: poi
  ports:
    - protocol: TCP
      name: poi-http
      port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trips-deployment
  namespace: api
  labels:
    deploy: trips
spec:
  replicas: 1
  selector:
    matchLabels:
      app: trips
  template:
    metadata:
      labels:
        app: trips
    spec:
      containers:
      - image: ozgursunexpress.azurecr.io/tripinsights/trips:1.0
        imagePullPolicy: Always
        name: trips
        livenessProbe:
          httpGet:
            path: /api/trips/healthcheck
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /api/trips/healthcheck
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
        ports:
          - containerPort: 80
            name: http
            protocol: TCP
        resources:
          limits:
            cpu: "1"
            memory: "512Mi"
          requests:
            cpu: "0.2"
            memory: "128Mi"
        volumeMounts:
        - name: secrets-store01-inline
          mountPath: "/secrets"
          readOnly: true
      volumes:
        - name: secrets-store01-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "azure-kvname-user-msi"
---
apiVersion: v1
kind: Service
metadata:
  name: trips
  namespace: api
spec:
  type: ClusterIP
  selector:
    app: trips
  ports:
    - protocol: TCP
      name: trips-http
      port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: userprofile-deployment
  namespace: api
  labels:
    deploy: userprofile
spec:
  replicas: 1
  selector:
    matchLabels:
      app: userprofile
  template:
    metadata:
      labels:
        app: userprofile
    spec:
      containers:
      - image: ozgursunexpress.azurecr.io/tripinsights/userprofile:1.0
        imagePullPolicy: Always
        name: userprofile
        livenessProbe:
          httpGet:
            path: /api/user/healthcheck
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /api/user/healthcheck
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
        ports:
          - containerPort: 80
            name: http
            protocol: TCP
        resources:
          limits:
            cpu: "1"
            memory: "512Mi"
          requests:
            cpu: "0.2"
            memory: "128Mi"
        volumeMounts:
        - name: secrets-store01-inline
          mountPath: "/secrets"
          readOnly: true
      volumes:
        - name: secrets-store01-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "azure-kvname-user-msi"
---
apiVersion: v1
kind: Service
metadata:
  name: userprofile
  namespace: api
spec:
  type: ClusterIP
  selector:
    app: userprofile
  ports:
    - protocol: TCP
      name: userprofile-http
      port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-java-deployment
  namespace: api
  labels:
    deploy: user-java
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-java
  template:
    metadata:
      labels:
        app: user-java
    spec:
      containers:
      - image: ozgursunexpress.azurecr.io/tripinsights/user-java:1.0
        imagePullPolicy: Always
        name: user-java
        livenessProbe:
          httpGet:
            path: /api/user-java/healthcheck
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /api/user-java/healthcheck
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
        ports:
          - containerPort: 80
            name: http
            protocol: TCP
        resources:
          limits:
            cpu: "1"
            memory: "512Mi"
          requests:
            cpu: "0.2"
            memory: "128Mi"
        volumeMounts:
        - name: secrets-store01-inline
          mountPath: "/secrets"
          readOnly: true
      volumes:
        - name: secrets-store01-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "azure-kvname-user-msi"
---
apiVersion: v1
kind: Service
metadata:
  name: user-java
  namespace: api
spec:
  type: ClusterIP
  selector:
    app: user-java
  ports:
    - protocol: TCP
      name: user-java-http
      port: 80
      targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    ingress.kubernetes.io/rewrite-target: /
  name: apiingress
  namespace: api
spec:
  ingressClassName: webapprouting.kubernetes.azure.com
  rules:
  - host: sunexpress.ayti.tech
    http:
      paths:
      - backend:
          service:
            name: poi
            port:
              number: 80
        path: /api/poi
        pathType: Prefix
      - backend:
          service:
            name: trips
            port:
              number: 80
        path: /api/trips
        pathType: Prefix
      - backend:
          service:
            name: userprofile
            port:
              number: 80
        path: /api/user
        pathType: Prefix
      - backend:
          service:
            name: user-java
            port:
              number: 80
        path: /api/user-java
        pathType: Prefix